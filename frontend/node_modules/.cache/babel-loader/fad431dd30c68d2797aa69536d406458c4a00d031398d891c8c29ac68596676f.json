{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Training\\\\Capstone Project\\\\HealthWise-Application\\\\frontend\\\\src\\\\patient\\\\DoctorSelection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Box, Container, Typography, Button, Card, CardContent } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './components/PatientNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorSelection = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchDoctors = async () => {\n      const token = sessionStorage.getItem('token');\n      const selectedSymptom = sessionStorage.getItem('selectedSymptom');\n      try {\n        const response = await axios.get(`/api/doctors?symptom=${selectedSymptom}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setDoctors(response.data); // Assuming the response contains the list of doctors\n      } catch (error) {\n        console.error('Error fetching doctors:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDoctors();\n  }, []);\n  const handleChooseDoctor = doctorId => {\n    navigate('/choose-appointment', {\n      state: {\n        doctorId\n      }\n    }); // Navigate and pass doctor ID as state\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Loading doctors...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        color: \"primary\",\n        gutterBottom: true,\n        textAlign: \"center\",\n        mt: 4,\n        children: \"Select a Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        gap: 2 // Adjust spacing between cards\n        ,\n        children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          sx: {\n            width: 300,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            padding: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"primary\",\n              gutterBottom: true,\n              children: doctor.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"textSecondary\",\n              children: [\"Specialization: \", doctor.specialization]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => handleChooseDoctor(doctor.id),\n            sx: {\n              mb: 2\n            },\n            children: \"Choose Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, doctor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorSelection, \"vvj460UY8+apEB2omi6GOx5aS0w=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorSelection;\nexport default DoctorSelection;\nvar _c;\n$RefreshReg$(_c, \"DoctorSelection\");","map":{"version":3,"names":["React","useEffect","useState","axios","Box","Container","Typography","Button","Card","CardContent","useNavigate","Navbar","jsxDEV","_jsxDEV","DoctorSelection","_s","doctors","setDoctors","loading","setLoading","navigate","fetchDoctors","token","sessionStorage","getItem","selectedSymptom","response","get","headers","Authorization","data","error","console","handleChooseDoctor","doctorId","state","children","mt","textAlign","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","gutterBottom","display","flexDirection","flexWrap","justifyContent","gap","map","doctor","sx","width","alignItems","padding","name","specialization","onClick","id","mb","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Training/Capstone Project/HealthWise-Application/frontend/src/patient/DoctorSelection.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Container, Typography, Button, Card, CardContent } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Navbar from './components/PatientNavbar';\r\n\r\ninterface Doctor {\r\n  id: string;\r\n  name: string;\r\n  specialization: string;\r\n}\r\n\r\nconst DoctorSelection: React.FC = () => {\r\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchDoctors = async () => {\r\n      const token = sessionStorage.getItem('token');\r\n      const selectedSymptom = sessionStorage.getItem('selectedSymptom');\r\n\r\n      try {\r\n        const response = await axios.get(`/api/doctors?symptom=${selectedSymptom}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        \r\n        setDoctors(response.data); // Assuming the response contains the list of doctors\r\n      } catch (error) {\r\n        console.error('Error fetching doctors:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n  const handleChooseDoctor = (doctorId: string) => {\r\n    navigate('/choose-appointment', { state: { doctorId } }); // Navigate and pass doctor ID as state\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container>\r\n        <Box mt={4} textAlign=\"center\">\r\n          <Typography variant=\"h5\">Loading doctors...</Typography>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Container>\r\n        <Typography variant=\"h4\" color=\"primary\" gutterBottom textAlign=\"center\" mt={4}>\r\n          Select a Doctor\r\n        </Typography>\r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\" \r\n          flexWrap=\"wrap\" \r\n          justifyContent=\"center\" \r\n          gap={2} // Adjust spacing between cards\r\n        >\r\n          {doctors.map((doctor) => (\r\n            <Card \r\n              variant=\"outlined\" \r\n              key={doctor.id} \r\n              sx={{ width: 300, display: 'flex', flexDirection: 'column', alignItems: 'center', padding: 2 }}\r\n            >\r\n              <CardContent>\r\n                <Typography variant=\"h6\" color=\"primary\" gutterBottom>\r\n                  {doctor.name}\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"textSecondary\">\r\n                  Specialization: {doctor.specialization}\r\n                </Typography>\r\n              </CardContent>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={() => handleChooseDoctor(doctor.id)} \r\n                sx={{ mb: 2 }}\r\n              >\r\n                Choose Doctor\r\n              </Button>\r\n            </Card>\r\n          ))}\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorSelection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}