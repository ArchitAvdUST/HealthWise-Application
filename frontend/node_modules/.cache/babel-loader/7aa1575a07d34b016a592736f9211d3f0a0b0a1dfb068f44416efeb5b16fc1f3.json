{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Training\\\\Capstone Project\\\\HealthWise-Application\\\\frontend\\\\src\\\\patient\\\\GetAppointments.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Box, Typography, Container, CircularProgress, Alert, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport Navbar from './components/PatientNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetAppointments = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        setLoading(true);\n        const token = sessionStorage.getItem('token');\n\n        // Fetching appointments\n        const response = await axios.get('/api/appointments', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const fetchedAppointments = response.data;\n\n        // Fetch doctor names for each appointment\n        const appointmentsWithDoctorNames = await Promise.all(fetchedAppointments.map(async appointment => {\n          const doctorResponse = await axios.get(`/api/doctors/${appointment.doctorId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          return {\n            ...appointment,\n            doctorName: doctorResponse.data.name\n          };\n        }));\n        setAppointments(appointmentsWithDoctorNames);\n      } catch (err) {\n        setError('Failed to load appointments');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAppointments();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"primary\",\n          children: \"Your Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `Date: ${appointment.date}, Time: ${appointment.time}`,\n              secondary: `Doctor: ${appointment.doctorName}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, appointment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(GetAppointments, \"XWvB2UQBtR2QtekeJHODmKGYgTo=\");\n_c = GetAppointments;\nexport default GetAppointments;\nvar _c;\n$RefreshReg$(_c, \"GetAppointments\");","map":{"version":3,"names":["React","useEffect","useState","axios","Box","Typography","Container","CircularProgress","Alert","List","ListItem","ListItemText","Divider","Navbar","jsxDEV","_jsxDEV","GetAppointments","_s","appointments","setAppointments","loading","setLoading","error","setError","fetchAppointments","token","sessionStorage","getItem","response","get","headers","Authorization","fetchedAppointments","data","appointmentsWithDoctorNames","Promise","all","map","appointment","doctorResponse","doctorId","doctorName","name","err","fileName","_jsxFileName","lineNumber","columnNumber","severity","children","mt","textAlign","variant","color","Fragment","primary","date","time","secondary","id","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Training/Capstone Project/HealthWise-Application/frontend/src/patient/GetAppointments.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Typography, Container, CircularProgress, Alert, List, ListItem, ListItemText, Divider } from '@mui/material';\r\nimport Navbar from './components/PatientNavbar';\r\n\r\ninterface Appointment {\r\n  id: string;\r\n  date: string;\r\n  time: string;\r\n  doctorId: string;\r\n  doctorName?: string; // Optional, to be populated later\r\n}\r\n\r\nconst GetAppointments: React.FC = () => {\r\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAppointments = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const token = sessionStorage.getItem('token');\r\n        \r\n        // Fetching appointments\r\n        const response = await axios.get('/api/appointments', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        const fetchedAppointments = response.data;\r\n        \r\n        // Fetch doctor names for each appointment\r\n        const appointmentsWithDoctorNames = await Promise.all(\r\n          fetchedAppointments.map(async (appointment: Appointment) => {\r\n            const doctorResponse = await axios.get(`/api/doctors/${appointment.doctorId}`, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            return { ...appointment, doctorName: doctorResponse.data.name };\r\n          })\r\n        );\r\n\r\n        setAppointments(appointmentsWithDoctorNames);\r\n      } catch (err) {\r\n        setError('Failed to load appointments');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Alert severity=\"error\">{error}</Alert>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Navbar */}\r\n      <Navbar />\r\n\r\n      {/* Appointments List */}\r\n      <Container>\r\n        <Box mt={4} textAlign=\"center\">\r\n          <Typography variant=\"h5\" color=\"primary\">\r\n            Your Appointments\r\n          </Typography>\r\n        </Box>\r\n\r\n        <List>\r\n          {appointments.map((appointment) => (\r\n            <React.Fragment key={appointment.id}>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={`Date: ${appointment.date}, Time: ${appointment.time}`}\r\n                  secondary={`Doctor: ${appointment.doctorName}`}\r\n                />\r\n              </ListItem>\r\n              <Divider />\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetAppointments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}