{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Training\\\\Capstone Project\\\\HealthWise-Application\\\\frontend\\\\src\\\\App.tsx\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport LandingPage from './LandingPage';\nimport SignUp from './auth/SignUp';\nimport Login from './auth/Login';\nimport AdditionalInfo from './auth/AdditionalInfo';\nimport PatientDashboard from './patient/PatientDashboard';\nimport AdminDashboard from './admin/AdminDashboard';\nimport DoctorDashboard from './doctor/DoctorDashboard';\nimport ProtectedRoute from './ProtectedRoute'; // Import the ProtectedRoute component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  // Retrieve the JWT token and decode it to get the role (You may want to use a library like jwt-decode)\n  const token = sessionStorage.getItem('jwtToken');\n  const userRole = token ? JSON.parse(atob(token.split('.')[1])).role : null; // Assuming role is in the JWT payload\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/additional-info\",\n        element: /*#__PURE__*/_jsxDEV(AdditionalInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/patient/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          element: /*#__PURE__*/_jsxDEV(PatientDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 34\n          }, this),\n          allowedRoles: ['patient'],\n          userRole: userRole\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          element: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 34\n          }, this),\n          allowedRoles: ['admin'],\n          userRole: userRole\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/doctor/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          element: /*#__PURE__*/_jsxDEV(DoctorDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 34\n          }, this),\n          allowedRoles: ['doctor'],\n          userRole: userRole\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","LandingPage","SignUp","Login","AdditionalInfo","PatientDashboard","AdminDashboard","DoctorDashboard","ProtectedRoute","jsxDEV","_jsxDEV","AppRouter","token","sessionStorage","getItem","userRole","JSON","parse","atob","split","role","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","allowedRoles","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Training/Capstone Project/HealthWise-Application/frontend/src/App.tsx"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport LandingPage from './LandingPage';\nimport SignUp from './auth/SignUp';\nimport Login from './auth/Login';\nimport AdditionalInfo from './auth/AdditionalInfo';\nimport PatientDashboard from './patient/PatientDashboard';\nimport AdminDashboard from './admin/AdminDashboard';\nimport DoctorDashboard from './doctor/DoctorDashboard';\nimport ProtectedRoute from './ProtectedRoute'; // Import the ProtectedRoute component\n\nconst AppRouter = () => {\n    // Retrieve the JWT token and decode it to get the role (You may want to use a library like jwt-decode)\n    const token = sessionStorage.getItem('jwtToken');\n    const userRole = token ? JSON.parse(atob(token.split('.')[1])).role : null; // Assuming role is in the JWT payload\n\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<LandingPage />} />\n                <Route path=\"/signup\" element={<SignUp />} />\n                <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/additional-info\" element={<AdditionalInfo />} />\n                \n                <Route path=\"/patient/dashboard\" element={\n                    <ProtectedRoute \n                        element={<PatientDashboard />} \n                        allowedRoles={['patient']} \n                        userRole={userRole} \n                    />} \n                />\n                \n                <Route path=\"/admin/dashboard\" element={\n                    <ProtectedRoute \n                        element={<AdminDashboard />} \n                        allowedRoles={['admin']} \n                        userRole={userRole} \n                    />} \n                />\n                \n                <Route path=\"/doctor/dashboard\" element={\n                    <ProtectedRoute \n                        element={<DoctorDashboard />} \n                        allowedRoles={['doctor']} \n                        userRole={userRole} \n                    />} \n                />\n            </Routes>\n        </Router>\n    );\n};\n\nexport default AppRouter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}