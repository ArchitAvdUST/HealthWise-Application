{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Training\\\\Capstone Project\\\\HealthWise-Application\\\\frontend\\\\src\\\\components\\\\doctor\\\\DoctorDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\nimport Navbar from './Navbar';\nimport { Button, CircularProgress, Container, List, ListItem, Typography, Alert, ListItemText } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const selectedDate = new Date().toISOString().split('T')[0];\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/appointments?date=${selectedDate}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setAppointments(data);\n      } catch (error) {\n        setError('Error fetching appointments. Please try again later.');\n        console.error('Error fetching appointments:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAppointments();\n  }, [selectedDate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        mt: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: [\"Appointments for \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        children: appointments.length > 0 ? appointments.map(appointment => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `Time: ${appointment.time}` // Only display the time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            component: Link // Use Link to navigate\n            ,\n            to: `/appointments/${appointment.id}` // Path to appointment details page\n            ,\n            variant: \"outlined\",\n            sx: {\n              ml: 2\n            },\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 37\n          }, this)]\n        }, appointment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"No appointments scheduled for this date.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(DoctorDashboard, \"XWvB2UQBtR2QtekeJHODmKGYgTo=\");\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useEffect","useState","Link","Navbar","Button","CircularProgress","Container","List","ListItem","Typography","Alert","ListItemText","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorDashboard","_s","appointments","setAppointments","loading","setLoading","error","setError","selectedDate","Date","toISOString","split","fetchAppointments","response","fetch","ok","Error","data","json","console","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","mt","variant","gutterBottom","severity","length","map","appointment","primary","time","component","to","id","ml","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Training/Capstone Project/HealthWise-Application/frontend/src/components/doctor/DoctorDashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\r\nimport Navbar from './Navbar';\r\nimport {\r\n    Box,\r\n    Button,\r\n    CircularProgress,\r\n    Container,\r\n    List,\r\n    ListItem,\r\n    Typography,\r\n    Alert,\r\n    ListItemText\r\n} from '@mui/material';\r\n\r\ninterface Appointment {\r\n    id: number;\r\n    date: string;\r\n    time: string;\r\n    patient: Patient;\r\n}\r\n\r\ninterface Patient {\r\n    id: string;\r\n    name: string;\r\n    age: number;\r\n}\r\n\r\nconst DoctorDashboard: React.FC = () => {\r\n    const [appointments, setAppointments] = useState<Appointment[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const selectedDate = new Date().toISOString().split('T')[0];\r\n\r\n    useEffect(() => {\r\n        const fetchAppointments = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/appointments?date=${selectedDate}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setAppointments(data);\r\n            } catch (error) {\r\n                setError('Error fetching appointments. Please try again later.');\r\n                console.error('Error fetching appointments:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchAppointments();\r\n    }, [selectedDate]);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Container sx={{ mt: 5 }}>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Appointments for {selectedDate}\r\n                </Typography>\r\n\r\n                {loading ? (\r\n                    <CircularProgress />\r\n                ) : error ? (\r\n                    <Alert severity=\"error\">{error}</Alert>\r\n                ) : (\r\n                    <List>\r\n                        {appointments.length > 0 ? (\r\n                            appointments.map((appointment) => (\r\n                                <ListItem key={appointment.id}>\r\n                                    <ListItemText\r\n                                        primary={`Time: ${appointment.time}`} // Only display the time\r\n                                    />\r\n                                    <Button\r\n                                        component={Link} // Use Link to navigate\r\n                                        to={`/appointments/${appointment.id}`} // Path to appointment details page\r\n                                        variant=\"outlined\"\r\n                                        sx={{ ml: 2 }}\r\n                                    >\r\n                                        View Details\r\n                                    </Button>\r\n                                </ListItem>\r\n                            ))\r\n                        ) : (\r\n                            <Typography variant=\"body1\">No appointments scheduled for this date.</Typography>\r\n                        )}\r\n                    </List>\r\n                )}\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}