{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Training\\\\Capstone Project\\\\HealthWise-Application\\\\frontend\\\\src\\\\auth\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Container, Box } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const {\n    setUser\n  } = useUser();\n  const navigate = useNavigate();\n  const handleLogin = async event => {\n    event.preventDefault();\n    setError(null);\n    try {\n      // Send login request to API\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Invalid credentials');\n      }\n      const data = await response.json();\n      const {\n        id,\n        role,\n        token\n      } = data;\n\n      // Save JWT token to sessionStorage\n      sessionStorage.setItem('token', token);\n\n      // Update user context\n      setUser({\n        id,\n        role\n      });\n\n      // Navigate to the home page or dashboard based on role\n      if (role === 'doctor') {\n        navigate('/doctor/dashboard');\n      } else if (role === 'patient') {\n        navigate('/patient/dashboard');\n      } else {\n        navigate('/admin/dashboard');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          label: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          label: \"Password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"u9cD1dLbjZB+ly3Ah4eNmB4uKwM=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Container","Box","useNavigate","useUser","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","setUser","navigate","handleLogin","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","id","role","token","sessionStorage","setItem","err","message","component","maxWidth","children","sx","mt","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","margin","required","fullWidth","label","value","onChange","e","target","type","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Training/Capstone Project/HealthWise-Application/frontend/src/auth/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Container,\r\n  Box,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUser } from './UserContext';\r\n\r\nconst Login: React.FC = () => {\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { setUser } = useUser();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    setError(null);\r\n\r\n    try {\r\n      // Send login request to API\r\n      const response = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Invalid credentials');\r\n      }\r\n\r\n      const data = await response.json();\r\n      const { id, role, token } = data;\r\n\r\n      // Save JWT token to sessionStorage\r\n      sessionStorage.setItem('token', token);\r\n\r\n      // Update user context\r\n      setUser({ id, role });\r\n      \r\n      // Navigate to the home page or dashboard based on role\r\n      if (role === 'doctor') {\r\n        navigate('/doctor/dashboard');\r\n      } else if (role === 'patient') {\r\n        navigate('/patient/dashboard');\r\n      } else {\r\n        navigate('/admin/dashboard');\r\n      }\r\n      \r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Box sx={{ mt: 8, mb: 2 }}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        {error && <Typography color=\"error\">{error}</Typography>}\r\n        <form onSubmit={handleLogin}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}