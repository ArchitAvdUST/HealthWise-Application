{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Training\\\\Capstone Project\\\\HealthWise-Application\\\\frontend\\\\src\\\\components\\\\doctor\\\\DoctorDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport { Button, CircularProgress, Container, List, ListItem, Typography, Alert, Card, CardContent, CardActions } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const selectedDate = new Date().toISOString().split('T')[0];\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/appointments?date=${selectedDate}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setAppointments(data);\n      } catch (error) {\n        setError('Error fetching appointments. Please try again later.');\n        console.error('Error fetching appointments:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAppointments();\n  }, [selectedDate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        mt: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: [\"Appointments for \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        children: appointments.length > 0 ? appointments.map(appointment => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            mb: 2\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            sx: {\n              width: '100%',\n              boxShadow: 2,\n              borderRadius: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"primary\",\n                children: [\"Time: \", appointment.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                component: Link,\n                to: `/manage-appointment/${appointment.id}?patientId=${appointment.patient.id} `,\n                variant: \"contained\" // Use contained variant for a solid button\n                ,\n                sx: {\n                  marginLeft: 'auto',\n                  // Align to the right\n                  backgroundColor: '#3f51b5',\n                  // Primary color\n                  '&:hover': {\n                    backgroundColor: '#303f9f' // Darker shade on hover\n                  }\n                },\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 37\n          }, this)]\n        }, appointment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"No appointments scheduled for this date.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(DoctorDashboard, \"XWvB2UQBtR2QtekeJHODmKGYgTo=\");\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useEffect","useState","Link","Navbar","Button","CircularProgress","Container","List","ListItem","Typography","Alert","Card","CardContent","CardActions","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorDashboard","_s","appointments","setAppointments","loading","setLoading","error","setError","selectedDate","Date","toISOString","split","fetchAppointments","response","fetch","ok","Error","data","json","console","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","mt","variant","gutterBottom","severity","length","map","appointment","mb","width","boxShadow","borderRadius","color","time","component","to","id","patient","marginLeft","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Training/Capstone Project/HealthWise-Application/frontend/src/components/doctor/DoctorDashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport {\r\n    Box,\r\n    Button,\r\n    CircularProgress,\r\n    Container,\r\n    List,\r\n    ListItem,\r\n    Typography,\r\n    Alert,\r\n    Card,\r\n    CardContent,\r\n    CardActions\r\n} from '@mui/material';\r\n\r\ninterface Appointment {\r\n    id: number;\r\n    date: string;\r\n    time: string;\r\n    patient: Patient;\r\n}\r\n\r\ninterface Patient {\r\n    id: string;\r\n    name: string;\r\n    age: number;\r\n}\r\n\r\nconst DoctorDashboard: React.FC = () => {\r\n    const [appointments, setAppointments] = useState<Appointment[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const selectedDate = new Date().toISOString().split('T')[0];\r\n\r\n    useEffect(() => {\r\n        const fetchAppointments = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/appointments?date=${selectedDate}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setAppointments(data);\r\n            } catch (error) {\r\n                setError('Error fetching appointments. Please try again later.');\r\n                console.error('Error fetching appointments:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchAppointments();\r\n    }, [selectedDate]);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Container sx={{ mt: 5 }}>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Appointments for {selectedDate}\r\n                </Typography>\r\n\r\n                {loading ? (\r\n                    <CircularProgress />\r\n                ) : error ? (\r\n                    <Alert severity=\"error\">{error}</Alert>\r\n                ) : (\r\n                    <List>\r\n                        {appointments.length > 0 ? (\r\n                            appointments.map((appointment) => (\r\n                                <ListItem key={appointment.id} sx={{ mb: 2 }}> {/* Margin bottom for spacing */}\r\n                                    <Card variant=\"outlined\" sx={{ width: '100%', boxShadow: 2, borderRadius: 2 }}>\r\n                                        <CardContent>\r\n                                            <Typography variant=\"h6\" color=\"primary\">\r\n                                                Time: {appointment.time}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        <CardActions>\r\n                                            <Button\r\n                                                component={Link}\r\n                                                to={`/manage-appointment/${appointment.id}?patientId=${appointment.patient.id} `}\r\n                                                variant=\"contained\" // Use contained variant for a solid button\r\n                                                sx={{\r\n                                                    marginLeft: 'auto', // Align to the right\r\n                                                    backgroundColor: '#3f51b5', // Primary color\r\n                                                    '&:hover': {\r\n                                                        backgroundColor: '#303f9f' // Darker shade on hover\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                View Details\r\n                                            </Button>\r\n                                        </CardActions>\r\n                                    </Card>\r\n                                </ListItem>\r\n                            ))\r\n                        ) : (\r\n                            <Typography variant=\"body1\">No appointments scheduled for this date.</Typography>\r\n                        )}\r\n                    </List>\r\n                )}\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}