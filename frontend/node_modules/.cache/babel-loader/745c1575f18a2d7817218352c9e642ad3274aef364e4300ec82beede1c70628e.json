{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Training\\\\Capstone Project\\\\HealthWise-Application\\\\frontend\\\\src\\\\auth\\\\SignUp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Container, Box, FormControl, MenuItem, Select } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [role, setRole] = useState('patient'); // Default role\n  const [error, setError] = useState('');\n  const [passwordMismatch, setPasswordMismatch] = useState(false);\n  const navigate = useNavigate();\n  const validateForm = () => {\n    if (!username || !password || !confirmPassword) {\n      setError('All fields are required.');\n      return false;\n    }\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return false;\n    }\n    return true;\n  };\n  const checkUsernameExists = async () => {\n    try {\n      const response = await axios.get(`/api/users?username=${username}`);\n      return response.data.exists; // Assuming the API returns a boolean\n    } catch (error) {\n      console.error('Error checking username', error);\n      return false;\n    }\n  };\n  const handleConfirmPasswordChange = event => {\n    const confirmPasswordValue = event.target.value;\n    setConfirmPassword(confirmPasswordValue);\n\n    // Check if the passwords match\n    if (confirmPasswordValue !== password) {\n      setPasswordMismatch(true);\n    } else {\n      setPasswordMismatch(false);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setError('');\n    if (!validateForm()) {\n      return;\n    }\n    const usernameExists = await checkUsernameExists();\n    if (usernameExists) {\n      setError('Username already exists.');\n      return;\n    }\n\n    // Save data through POST endpoint\n    try {\n      await axios.post('/api/users', {\n        username,\n        password,\n        role\n      });\n      // Redirect to additional information page\n      navigate(`/additional-info?username=${username}`);\n    } catch (error) {\n      console.error('Error creating user', error);\n      setError('Failed to create account. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          label: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          label: \"Password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          label: \"Confirm Password\",\n          type: \"password\",\n          value: confirmPassword,\n          onChange: handleConfirmPasswordChange // Updated to use new handler\n          ,\n          error: passwordMismatch // Highlight if there is a mismatch\n          ,\n          helperText: passwordMismatch ? 'Passwords do not match.' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            disabled: true,\n            labelId: \"role-label\",\n            value: role,\n            onChange: e => setRole(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"patient\",\n              children: \"Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"doctor\",\n              children: \"Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          disabled: passwordMismatch // Disable the button if passwords do not match\n          ,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"yq1N682Q92DLaco/kcLgOYVN+XY=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Container","Box","FormControl","MenuItem","Select","axios","useNavigate","jsxDEV","_jsxDEV","SignUp","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","role","setRole","error","setError","passwordMismatch","setPasswordMismatch","navigate","validateForm","checkUsernameExists","response","get","data","exists","console","handleConfirmPasswordChange","event","confirmPasswordValue","target","value","handleSubmit","preventDefault","usernameExists","post","component","maxWidth","children","sx","mt","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","margin","required","fullWidth","label","onChange","e","type","helperText","disabled","labelId","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Training/Capstone Project/HealthWise-Application/frontend/src/auth/SignUp.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Container,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SignUp: React.FC = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [role,setRole] = useState('patient'); // Default role\r\n  const [error, setError] = useState('');\r\n  const [passwordMismatch, setPasswordMismatch] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const validateForm = () => {\r\n    if (!username || !password || !confirmPassword) {\r\n      setError('All fields are required.');\r\n      return false;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const checkUsernameExists = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/users?username=${username}`);\r\n      return response.data.exists; // Assuming the API returns a boolean\r\n    } catch (error) {\r\n      console.error('Error checking username', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const confirmPasswordValue = event.target.value;\r\n    setConfirmPassword(confirmPasswordValue);\r\n\r\n    // Check if the passwords match\r\n    if (confirmPasswordValue !== password) {\r\n      setPasswordMismatch(true);\r\n    } else {\r\n      setPasswordMismatch(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    setError('');\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    const usernameExists = await checkUsernameExists();\r\n    if (usernameExists) {\r\n      setError('Username already exists.');\r\n      return;\r\n    }\r\n\r\n    // Save data through POST endpoint\r\n    try {\r\n      await axios.post('/api/users', {\r\n        username,\r\n        password,\r\n        role,\r\n      });\r\n      // Redirect to additional information page\r\n      navigate(`/additional-info?username=${username}`);\r\n    } catch (error) {\r\n      console.error('Error creating user', error);\r\n      setError('Failed to create account. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Box sx={{ mt: 8, mb: 2 }}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign Up\r\n        </Typography>\r\n        {error && <Typography color=\"error\">{error}</Typography>}\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={handleConfirmPasswordChange} // Updated to use new handler\r\n            error={passwordMismatch} // Highlight if there is a mismatch\r\n            helperText={passwordMismatch ? 'Passwords do not match.' : ''}\r\n          />\r\n          <FormControl fullWidth margin=\"normal\">\r\n            {/*<InputLabel id=\"role-label\">Role</InputLabel>*/}\r\n            <Select disabled\r\n              labelId=\"role-label\"\r\n              value={role}\r\n              onChange={(e) => setRole(e.target.value)}\r\n            >\r\n              <MenuItem value=\"patient\">Patient</MenuItem>\r\n              <MenuItem value=\"doctor\">Doctor</MenuItem>\r\n              <MenuItem value=\"admin\">Admin</MenuItem>\r\n              {/* Add more roles as needed */}\r\n            </Select>\r\n          </FormControl>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            disabled={passwordMismatch} // Disable the button if passwords do not match\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}