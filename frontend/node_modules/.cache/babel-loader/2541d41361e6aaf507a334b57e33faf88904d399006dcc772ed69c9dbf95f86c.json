{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Training\\\\Capstone Project\\\\HealthWise-Application\\\\frontend\\\\src\\\\components\\\\doctor\\\\DoctorDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from './Navbar';\nimport { CircularProgress, Container, List, ListItem, ListItemText, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const tselectedDate = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\n\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        if (selectedDate) {\n          const response = await fetch(`YOUR_BACKEND_API_ENDPOINT?date=${selectedDate}`); // Pass date as a query parameter\n          const data = await response.json();\n          setAppointments(data); // Adjust based on the shape of your response\n        } else {\n          console.error('No date selected');\n        }\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAppointments();\n  }, [selectedDate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        mt: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: [\"Appointments for \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        children: appointments.length > 0 ? appointments.map(appointment => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${appointment.time} - ${appointment.patient.name}` // Patient's name\n            ,\n            secondary: `Age: ${appointment.patient.age}` // Patient's age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this)\n        }, appointment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"No appointments scheduled for this date.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DoctorDashboard, \"SC/8TMxs51DlsvS6TaWs1IZo4Q8=\");\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","CircularProgress","Container","List","ListItem","ListItemText","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorDashboard","_s","appointments","setAppointments","loading","setLoading","tselectedDate","Date","toISOString","split","fetchAppointments","selectedDate","response","fetch","data","json","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","mt","variant","gutterBottom","length","map","appointment","primary","time","patient","name","secondary","age","id","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Training/Capstone Project/HealthWise-Application/frontend/src/components/doctor/DoctorDashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Navbar from './Navbar'\r\nimport { Box, Button, CircularProgress, Container, List, ListItem, ListItemText, Typography } from '@mui/material';\r\n\r\ninterface Appointment {\r\n    id: number;\r\n    date: string;\r\n    time: string;\r\n    patientId: Patient;\r\n  }\r\n\r\ninterface Patient {\r\n    name: string;\r\n    age : number;\r\n\r\n}\r\n\r\nconst DoctorDashboard = () => {\r\n    const [appointments, setAppointments] = useState<Appointment[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const tselectedDate = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchAppointments = async () => {\r\n      try {\r\n        if (selectedDate) {\r\n          const response = await fetch(`YOUR_BACKEND_API_ENDPOINT?date=${selectedDate}`); // Pass date as a query parameter\r\n          const data = await response.json();\r\n          setAppointments(data); // Adjust based on the shape of your response\r\n        } else {\r\n          console.error('No date selected');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching appointments:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAppointments();\r\n  }, [selectedDate]);\r\n  return (\r\n    <>\r\n        <Navbar />\r\n      <Container sx={{ mt: 5 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Appointments for {selectedDate}\r\n        </Typography>\r\n\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <List>\r\n            {appointments.length > 0 ? (\r\n              appointments.map((appointment) => (\r\n                <ListItem key={appointment.id}>\r\n                  <ListItemText\r\n                    primary={`${appointment.time} - ${appointment.patient.name}`} // Patient's name\r\n                    secondary={`Age: ${appointment.patient.age}`} // Patient's age\r\n                  />\r\n                </ListItem>\r\n              ))\r\n            ) : (\r\n              <Typography variant=\"body1\">No appointments scheduled for this date.</Typography>\r\n            )}\r\n          </List>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoctorDashboard"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}