{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Training\\\\Capstone Project\\\\HealthWise-Application\\\\frontend\\\\src\\\\components\\\\doctor\\\\Appointments.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Appointments = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const response = await fetch('YOUR_BACKEND_API_ENDPOINT'); // Replace with your backend API endpoint\n        const data = await response.json();\n        setAppointments(data); // Adjust based on the shape of your response\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAppointments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Appointments, \"SC/8TMxs51DlsvS6TaWs1IZo4Q8=\");\n_c = Appointments;\nexport default Appointments;\nvar _c;\n$RefreshReg$(_c, \"Appointments\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Appointments","_s","appointments","setAppointments","loading","setLoading","fetchAppointments","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Training/Capstone Project/HealthWise-Application/frontend/src/components/doctor/Appointments.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Typography, List, ListItem, ListItemText, CircularProgress } from '@mui/material';\r\nimport Navbar from './Navbar';\r\n\r\ninterface Appointment {\r\n  id: number;\r\n  time: string;\r\n  patientName: string;\r\n  // Add any other relevant fields\r\n}\r\n\r\nconst Appointments: React.FC = () => {\r\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const fetchAppointments = async () => {\r\n      try {\r\n        const response = await fetch('YOUR_BACKEND_API_ENDPOINT'); // Replace with your backend API endpoint\r\n        const data = await response.json();\r\n        setAppointments(data); // Adjust based on the shape of your response\r\n      } catch (error) {\r\n        console.error('Error fetching appointments:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAS9B,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAgB,EAAE,CAAC;EACnE,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAU,IAAI,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAC;QAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,eAAe,CAACM,IAAI,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,SAAS;QACRN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA,CAACF,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAEV,CAAC;AAEP,CAAC;AAAChB,EAAA,CA1BID,YAAsB;AAAAkB,EAAA,GAAtBlB,YAAsB;AA4B5B,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}