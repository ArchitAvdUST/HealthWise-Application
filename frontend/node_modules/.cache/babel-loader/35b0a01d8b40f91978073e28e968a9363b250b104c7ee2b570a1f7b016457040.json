{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Training\\\\Capstone Project\\\\HealthWise-Application\\\\frontend\\\\src\\\\auth\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Container, Box } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const fetchUserRole = async token => {\n    try {\n      const userResponse = await axios.get('/api/getUserRole', {\n        // Replace with your API endpoint\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (userResponse.ok) {\n        const userData = await userResponse.json();\n        const {\n          role\n        } = userData;\n\n        // Redirect based on the role\n        if (role === 'patient') {\n          navigate('/patient/dashboard');\n        } else if (role === 'doctor') {\n          navigate('/doctor/dashboard');\n        } else if (role === 'admin') {\n          navigate('/admin/dashboard');\n        }\n      } else {\n        setError('Failed to retrieve user role');\n      }\n    } catch (error) {\n      setError('An error occurred while fetching the user role');\n      console.error(error);\n    }\n  };\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('/api/login', {\n        username,\n        password\n      });\n      if (response.status === 200 && response.data.success) {\n        const {\n          token\n        } = response.data; // Assuming the token is returned in the response\n        sessionStorage.setItem('jwtToken', token); // Store the JWT token in session storage\n\n        // Call an API to get the user information based on the token\n        fetchUserRole(token);\n      } else {\n        setError('Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Login error', error);\n      setError('Login failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          label: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          label: \"Password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"PRk3rkn/Zq+a3Ceqt4taaWXn0UQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Container","Box","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","navigate","fetchUserRole","token","userResponse","get","headers","ok","userData","json","role","console","handleLogin","event","preventDefault","response","post","status","data","success","sessionStorage","setItem","component","maxWidth","children","sx","mt","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","margin","required","fullWidth","label","value","onChange","e","target","type","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Training/Capstone Project/HealthWise-Application/frontend/src/auth/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Container,\r\n  Box,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login: React.FC = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const fetchUserRole = async (token:string) => {\r\n    try {\r\n        const userResponse = await axios.get('/api/getUserRole', { // Replace with your API endpoint\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        if (userResponse.ok) {\r\n            const userData = await userResponse.json();\r\n            const { role } = userData;\r\n\r\n            // Redirect based on the role\r\n            if (role === 'patient') {\r\n                navigate('/patient/dashboard');\r\n            } else if (role === 'doctor') {\r\n                navigate('/doctor/dashboard');\r\n            } else if (role === 'admin') {\r\n                navigate('/admin/dashboard');\r\n            }\r\n        } else {\r\n            setError('Failed to retrieve user role');\r\n        }\r\n    } catch (error) {\r\n        setError('An error occurred while fetching the user role');\r\n        console.error(error);\r\n    }\r\n};\r\n  const handleLogin = async (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post('/api/login', { username, password });\r\n\r\n      if (response.status === 200 && response.data.success) {\r\n        const { token } = response.data; // Assuming the token is returned in the response\r\n        sessionStorage.setItem('jwtToken', token); // Store the JWT token in session storage\r\n    \r\n        // Call an API to get the user information based on the token\r\n        fetchUserRole(token);\r\n    } else {\r\n        setError('Invalid credentials');\r\n    }\r\n    \r\n    } catch (error) {\r\n      console.error('Login error', error);\r\n      setError('Login failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Box sx={{ mt: 8, mb: 2 }}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        {error && <Typography color=\"error\">{error}</Typography>}\r\n        <form onSubmit={handleLogin}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}